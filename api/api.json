{
    "name": "Apidoc Generator",
    "description": "Documentation for an apidoc code generator API",
    "base_url": "http://www.apidoc.me",

    "enums": {
	"method": {
	    "values": [
		{ "name": "GET" },
		{ "name": "POST" },
		{ "name": "PUT" },
		{ "name": "PATCH" },
		{ "name": "DELETE" },
		{ "name": "HEAD" },
		{ "name": "CONNECT" },
		{ "name": "OPTIONS" },
		{ "name": "TRACE" }
	    ]
	},

	"parameter_location": {
	    "values": [
		{ "name": "Path" },
		{ "name": "Query" },
		{ "name": "Form" }
	    ]
	}
    },

    "models": {
	"service": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "base_url", "type": "string", "required": false },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "headers", "type": "[header]" },
		{ "name": "enums", "type": "map[enum]" },
		{ "name": "models", "type": "map[model]" },
		{ "name": "resources", "type": "map[resource]", "description": "keys are the names of a model" }
	    ]
	},

	"enum": {
	    "fields": [
		{ "name": "description", "type": "string", "required": false },
		{ "name": "values", "type": "[enum_value]" }
	    ]
	},

	"enum_value": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "description", "type": "string", "required": false }
	    ]
	},

	"model": {
	    "fields": [
		{ "name": "plural", "type": "string", "required": false, "description": "Defaults to the plural of the model name. Used to generate resource paths which by default map to the plural of the model name" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "fields", "type": "[field]" }
	    ]
	},

	"field": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "default", "type": "string", "required": false },
		{ "name": "required", "type": "boolean", "default": true },
		{ "name": "minimum", "type": "long", "required": false },
		{ "name": "maximum", "type": "long", "required": false },
		{ "name": "example", "type": "string", "required": false }
	    ]
	},

	"resource": {
	    "fields": [
		{ "name": "description", "type": "string", "required": false },
		{ "name": "path", "type": "string", "required": false, "description": "Defaults to the plural of the model name" },
		{ "name": "operations", "type": "[operation]" }
	    ]
	},

	"operation": {
	    "fields": [
		{ "name": "method", "type": "method" },
		{ "name": "path", "type": "string", "required": false },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "body", "type": "body", "required": false },
		{ "name": "parameters", "type": "[parameter]", "required": false },
		{ "name": "responses", "type": "map[response]", "required": false, "description": "Keys are HTTP status codes" }
	    ]
	},

	"body": {
	    "fields": [
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false }
	    ]
	},

	"parameter": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "location", "type": "parameter_location", "required": false },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "required", "type": "boolean", "default": true },
		{ "name": "default", "type": "string", "required": false },
		{ "name": "minimum", "type": "long", "required": false },
		{ "name": "maximum", "type": "long", "required": false },
		{ "name": "example", "type": "string", "required": false }
	    ]
	},

	"response": {
	    "fields": [
		{ "name": "type", "type": "string" }
	    ]
	},

	"header": {
	    "fields": [
		{ "name": "name", "type": "string" },
		{ "name": "type", "type": "string" },
		{ "name": "description", "type": "string", "required": false },
		{ "name": "required", "type": "boolean" },
		{ "name": "default", "type": "string", "required": false }
	    ]
	},

        "generator": {
            "description": "The generator metadata.",
            "fields": [
                { "name": "key", "type": "string" },
                { "name": "name", "type": "string" },
                { "name": "language", "type": "string", "required": false },
                { "name": "description", "type": "string", "required": false }
            ]
        },

        "invocation": {
          "description": "The result of invoking a generator.",
          "fields": [
            { "name": "source", "type": "string", "description": "The actual source code." }
          ]
        },

	"healthcheck": {
	    "fields": [
                { "name": "status", "type": "string", "example": "healthy" }
	    ]
	},

        "error": {
            "fields": [
                { "name": "code", "type": "string", "description": "Machine readable code for this specific error message" },
                { "name": "message", "type": "string", "description": "Description of the error" }
            ]
        }

    },

    "resources": {

	"healthcheck": {
	    "path": "/_internal_/healthcheck",
            "operations": [
                {
                    "method": "GET",
                    "responses": {
                        "200": { "type": "healthcheck" }
                    }
                }
	    ]
	},

        "generator": {
            "operations": [
                {
                    "method": "GET",
                    "description": "Get all available generators",
                    "parameters": [
                        { "name": "key", "type": "string", "description": "Filter generators with this key", "required": false },
                        { "name": "limit", "type": "integer", "default": 100, "description": "The number of records to return", "minimum": 0 },
                        { "name": "offset", "type": "integer", "default": 0, "description": "Used to paginate. First page of results is 0.", "minimum": 0 }
		    ],
                    "responses": {
                        "200": { "type": "[generator]" }
                    }
                },
                {
                  "method": "GET",
                  "path": "/:key",
                  "description": "Get generator with this key",
                  "responses": {
                    "200": { "type": "generator" }
                  }
                }
	    ]
	},

	"invocation": {
	    "operations": [
		{
                    "method": "POST",
                    "path": "/:key",
                    "description": "Invoke a generator",
                    "body": { "type": "service" },
                    "responses": {
                        "200": { "type": "invocation" },
                        "409": { "type": "[error]" }
                    }
                }
            ]
        }
    }
}
