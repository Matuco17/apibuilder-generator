import anorm._

package test.apidoc.apidoctest.v0.anorm {

  package parsers {

    object Reference {

      def newParser(config: util.Config) = {
        config match {
          case util.Config.Prefix(prefix) => parser(
            guid = s"${prefix}_guid"
          )
        }
      }

      def parserByTable(table: String) = parser(
        guid = s"$table.guid"
      )

      def parser(
        guid: String
      ): RowParser[test.apidoc.apidoctest.v0.models.Reference] = {
        SqlParser.get[_root_.java.util.UUID](guid) map {
          case guid => {
            test.apidoc.apidoctest.v0.models.Reference(
              guid = guid
            )
          }
        }
      }

    }

  }

  package test.apidoc.apidoctest.v0.anorm.util {

    sealed trait Config {
      def name(column: String): String
    }

    object Config {
      case class Prefix(prefix: String) extends Config {
        override def name(column: String): String = s"${prefix}_$column"
      }
    }

  }

}